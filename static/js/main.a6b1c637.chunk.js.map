{"version":3,"sources":["img/imdb.png","img/kinopoisk.png","component/MovieInfo.js","component/MovieItem.js","component/Movies.js","App.js","index.js"],"names":["MovieInfo","props","useState","imdbUrl","handleFetchIMDBId","movie","infoMovie","console","log","genresStr","genres","map","itemGenre","genre","join","countriesStr","countries","itemCountry","country","className","src","posterUrlPreview","alt","nameRu","year","filmLength","imdbId","href","target","onClick","imdbPic","title","ratingImdb","ratingImdbVoteCount","webUrl","kipPic","ratingKinopoisk","ratingKinopoiskVoteCount","ratingAgeLimits","slice","description","API_KEY","MovieItem","modalInfoMovie","setModalInfoMovie","modalShowPoster","setModalPoster","setInfoMovie","a","movieId","filmId","fetch","headers","responce","json","Card","Body","Modal","show","size","onHide","Header","closeButton","Title","viewBox","width","height","focusable","role","xmlns","fill","d","rating","nameEn","Button","variant","getInfoMovie","Movies","films","setFilms","pagesCount","setPagesCount","active","getNumberPressedPages","useEffect","handleFetchData","pageNumber","apiUrl","axios","get","then","resp","movies","data","handlePageChange","container","document","querySelector","window","scrollTo","scrollTop","totalPages","currentPage","onChange","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6b1c637.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/imdb.45fa8819.png\";","export default __webpack_public_path__ + \"static/media/kinopoisk.58a56ecc.png\";","import React, { useState } from 'react';\n\nimport imdbPic from '../img/imdb.png';\nimport kipPic from '../img/kinopoisk.png';\n\nconst MovieInfo = (props) => {\n  const [imdbUrl, handleFetchIMDBId] = useState(''); // показывать постер крупнее\n\n  const movie = props.infoMovie;\n  console.log('movie: ', movie);\n  const genresStr = props.infoMovie.genres.map((itemGenre) => itemGenre.genre).join(' / ');\n  const countriesStr = props.infoMovie.countries\n    .map((itemCountry) => itemCountry.country)\n    .join(' / ');\n\n  const clickImdbLink = () => {\n    console.log('movie.imdbId ', movie.imdbId);\n    movie.imdbId === null\n      ? (movie.imdbId = null)\n      : handleFetchIMDBId(`https://www.imdb.com/title/${movie.imdbId}`);\n  };\n\n  return (\n    <div className=\"modal-container\">\n      <img src={movie.posterUrlPreview} alt=\"\" className=\"modal-poster\" />\n      <div className=\"modal-movie\">\n        <div className=\"modal-movie-table\">\n          <span>Оригинальное название </span>\n          <span>{movie.nameRu}</span>\n          <span>Год </span>\n          <span> {movie.year} </span>\n          <span>Страна </span>\n          <span>{countriesStr}</span>\n          <span>Время </span>\n          <span>{movie.filmLength} мин</span>\n          <span>Жанр </span>\n          <span>{genresStr}</span>\n        </div>\n        <div className=\"rating-container\">\n          <span className=\"rating-imdb\">\n            {movie.imdbId !== null ? (\n              <a href={imdbUrl} target=\"_blank\" onClick={() => clickImdbLink()}>\n                <img className=\"rating-imdb-pic\" src={imdbPic} />\n              </a>\n            ) : (\n              <img className=\"rating-imdb-pic\" src={imdbPic} />\n            )}\n            <span className=\"rating-number\" title=\"Рейтинг IMDB\">\n              {movie.ratingImdb}\n            </span>\n            <span className=\"rating-count\" title=\"Количество голосов\">\n              {movie.ratingImdbVoteCount}\n            </span>\n          </span>\n          <span className=\"rating-kinopoisk\">\n            <a href={movie.webUrl} target=\"_blank\">\n              <img className=\"rating-kinopoisk-pic\" src={kipPic} />\n            </a>\n            <span className=\"rating-number\" title=\"Рейтинг Кинопоиск\">\n              {movie.ratingKinopoisk}\n            </span>\n            <span className=\"rating-count\" title=\"Количество голосов\">\n              {movie.ratingKinopoiskVoteCount}\n            </span>\n          </span>\n\n          <span className=\"rating-age\" title=\"Ограничение по возрасту\">\n            {movie.ratingAgeLimits ? movie.ratingAgeLimits.slice(3) + '+' : '-'}\n          </span>\n        </div>\n        <p className=\"modal-movie-description\">{movie.description}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","import React, { useState } from \"react\";\nimport { Button, Card, Modal } from \"react-bootstrap\";\nimport MovieInfo from \"./MovieInfo.js\";\nconst API_KEY = \"8ccb0f71-adf6-4b8f-9927-980b4f08e9d5\";\n\nexport const MovieItem = (props) => {\n  const [modalInfoMovie, setModalInfoMovie] = useState(false); // показывать инф. о фильме\n  const [modalShowPoster, setModalPoster] = useState(false); // показывать постер крупнее\n  const [infoMovie, setInfoMovie] = useState();\n\n  const genresStr = props.movie.genres.map((itemGenre) => itemGenre.genre).join(\" / \");\n  const countriesStr = props.movie.countries.map((itemCountry) => itemCountry.country).join(\" / \");\n  const movie = props.movie;\n\n  async function getInfoMovie() {\n    const movieId = movie.filmId;\n    const responce = await fetch(`https://kinopoiskapiunofficial.tech/api/v2.2/films/${movieId}`, {\n      headers: {\n        \"Content-Type\": \"aplication/json\",\n        \"X-API-KEY\": API_KEY,\n      },\n    });\n\n    const infoMovie = await responce.json();\n    setInfoMovie(infoMovie);\n    setModalInfoMovie(true);\n  }\n\n  function clickPoster() {\n    setModalPoster(true);\n  }\n\n  return (\n    <Card>\n      <Card.Body>\n        <div className=\"poster\">\n          <img src={movie.posterUrlPreview} alt=\"\" className=\"poster-img\" onClick={() => clickPoster()} />\n        </div>\n        <Modal show={modalInfoMovie} size=\"xl\" onHide={() => setModalInfoMovie(false)}>\n          <Modal.Header closeButton>\n            <Modal.Title>{movie.nameRu}</Modal.Title>\n          </Modal.Header>\n          <MovieInfo infoMovie={infoMovie}> </MovieInfo> {/* перенести  {modalInfoMovie} */}\n        </Modal>\n        <Modal closeButton show={modalShowPoster} size=\"xl\" onHide={() => setModalPoster(false)}>\n          <Modal.Body >\n          <Modal.Header closeButton>  </Modal.Header>\n             <img src={movie.posterUrlPreview} alt=\"\" className=\"poster-modal\" />{\" \"}\n          </Modal.Body >\n        </Modal>\n        <div className=\"movie\">\n          <div className=\"movie-head\">\n            <h2 className=\"movie-title\">{movie.nameRu}</h2>\n            <span className=\"b-rating-icon\" title=\"Рейтинг Кинопоиск\">\n              <svg\n                viewBox=\"0 0 16 16\"\n                width=\"1em\"\n                height=\"1em\"\n                focusable=\"false\"\n                role=\"img\"\n                aria-label=\"star fill\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"currentColor\"\n                className=\"bi-star-fill b-icon bi\"\n              >\n                <g>\n                  <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"></path>\n                </g>\n              </svg>\n              {movie.rating}\n            </span>\n          </div>\n          <div className=\"movie-desciption\">\n            <div className=\"movie-table\">\n              <span>\n                {movie.nameEn} • {movie.year}\n              </span>\n              <span>{countriesStr}</span>\n              <span>{genresStr}</span>\n              <span> </span>\n            </div>\n            <Button className=\"movie-about\" size=\"md\" variant=\"outline-primary\" onClick={() => getInfoMovie()}>\n              Подробнее\n            </Button>{\" \"}\n          </div>\n        </div>\n      </Card.Body>\n    </Card>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { MovieItem } from \"./MovieItem.js\";\nimport ReactUltimatePagination from \"react-ultimate-pagination-bootstrap-4\";\nimport axios from \"axios\";\n\nconst API_KEY = \"8ccb0f71-adf6-4b8f-9927-980b4f08e9d5\";\n\nexport const Movies = () => {\n  const [films, setFilms] = useState([]); // состояние с фильмами\n  const [pagesCount, setPagesCount] = useState(1); // состояние страницы\n  const [active, getNumberPressedPages] = useState(1); // состояние\n\n  //useEffect будет следить за изменением handleFetchData и производить ререндер если это необходимо\n  useEffect(() => {\n    handleFetchData();\n  }, []);\n\n \n\n  /**************************************/\n\n  /* const handleFetchData = (pageNumber = 1) => {\n    fetch(`https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_100_POPULAR_FILMS&page=${pageNumber}`,\n    {\n      headers: {\n        \"Content-Type\": \"aplication/json\",\n        \"X-API-KEY\": API_KEY,\n      },\n    })\n      .then((responce) => responce.json())\n      .then((data) => {\n        //console.log(\"data.films\", data);\n        setPagesCount(data.pagesCount);\n        setFilms(data.films);\n      });\n  }; */\n\n  /*\n  useEffect(() => {\n    const apiUrl = 'http://www.filltext.com/?rows=32&id={number|1000}&firstName={firstName}&lastName={lastName}&email={email}&phone={phone|(xxx)xxx-xx-xx}&address={addressObject}&description={lorem|32}';\n    axios.get(apiUrl).then((resp) => {\n      const allPersons = resp.data;\n      setAppState(allPersons);\n    });\n  }, [setAppState]);\n\n  */\n\n  const handleFetchData = (pageNumber = 1) => {\n    const apiUrl = `https://kinopoiskapiunofficial.tech/api/v2.2/films/top?type=TOP_100_POPULAR_FILMS&page=${pageNumber}`;\n    // https://kinopoiskapiunofficial.tech/api/v2.2/films/301'\n    axios\n      .get(apiUrl, {\n        headers: {\n          \"Content-Type\": \"aplication/json\",\n          \"X-API-KEY\": API_KEY,\n        },\n      })\n      .then((resp) => {\n        const movies = resp.data;\n        setPagesCount(movies.pagesCount);\n        setFilms(movies.films);\n      });\n  };\n\n\n  function handlePageChange(pageNumber) {\n    handleFetchData(pageNumber);\n    getNumberPressedPages(pageNumber);\n    // скролл наверх страницы\n    const container = document.querySelector(\".movie-container\");\n    window.scrollTo(0, container.scrollTop);\n  }\n  return (\n    <div className=\"movie-container\">\n      <h1>Популярные фильмы и сериалы</h1>\n\n      <ReactUltimatePagination totalPages={pagesCount} currentPage={active} onChange={handlePageChange} />\n\n      <ul className=\"movie-list\">\n        {films.map((movie) => (\n          <li key={movie.filmId}>\n            <MovieItem movie={movie} /* onClick={clickPoster} */></MovieItem>\n          </li>\n        ))}\n      </ul>\n\n      <ReactUltimatePagination totalPages={pagesCount} currentPage={active} onChange={handlePageChange} />\n    </div>\n  );\n};\n","import \"./style/style.css\";\nimport { Movies } from \"./component/Movies.js\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Movies />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./style/style.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n"],"sourceRoot":""}